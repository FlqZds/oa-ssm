<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" default-autowire="byName"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">

    <!--去哪里扫描controller bean-->
    <context:component-scan base-package="org.sample"/>

    <!-- 静态资源【html css js 图片】 不被DispatcherServlet 拦截-->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>


    <!--声明路径和 controller 关系 通过注解 驱动获得  //启用Spring MVC注解开发模式-->
    <mvc:annotation-driven>
        <!--            //响应类型转换器，可配置多个-->
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <!--//相当于在servlet中写的response.setContentType("text/html;charset=utf-8")-->
                        <value>text/plain;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--数据源 切记去掉mb 中的数据源的配置-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/db1?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false"/>
        <property name="user" value="root"/>
        <property name="password" value="123456"/>
    </bean>

    <!--配置session 工厂 切记去掉 mb.xml 中的映射的配置-->
    <bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">

        <property name="dataSource" ref="dataSource"/>

        <property name="configLocation" value="classpath:mb.xml"/>
        <!--映射文件在哪里-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>

    </bean>

    <!--org.demo.mapper 扫描 spring 要生成所的mapper bean-->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="SqlSessionFactory"/>
        <!--去哪里扫描 org.demo.mapper 的接口-->
        <property name="basePackage" value="org.sample.mapper"/>

    </bean>


</beans>